<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gTwETG2Zf17Hjl2p98mJdOe9w2n9Pbm+3c1/owcbaf3jW+c+j4/ja+Xn1ec+MJ7u6dmehh8fbb5urCPW
        Va5nz760uTaRfvWU9t/fUoq9Oe88py99/ZbRdOP94/Nac994+qPza22XkyRJ0vIygGhJvfrUTemrN46l
        tKVyyFUMBxOb0776VPrE9wbTq/JGfbtll9LrTu9Jp63N66kOHrHO1p6Rb9w23na5pfY75/aly+7fkraP
        Vs5BaZ0Af2iwnj55zUjb5SRJkrS8DCBaUnH1q/VP5I316mAQJ4WPT6UHnpzq2Enh8Tq3bpiaf6WsWOfY
        RHrsqcn0O9/sa7vcUvuNr/emH9zTKL7/2fXEZYXzvwcH6m2XkSRJ0vIzgGhJvX91fzo4VNlQ3z53QvmZ
        Nw2n13fovImPX9yfni7XE+toDQXR2jyYdOLwq9jL8g9XDadHH2utJy4FHJcLbq3nlryedstJkiRp+RlA
        dNzFoVWrbm9d+WpBU/Xp9OeXDrZdbqnFeRmfu7zWdj3bpmfSF64b6ciVqd67upbufLj9zxO1W0aSJEnP
        LwOIjrvXn96TBka2NvcS7KncOHD7znTzxm3pd8/tzOFX7zmvP40O5XUs2MMSeyjWPLKlOGyq3XJLLe6g
        vnrt0FF7WNKBg2l7zQAiSZK0EhlAdNz97RV5Y726oR6Xzp3YnA4ON9J/rRlOrzmtM4dfffSCWptzTCbT
        gdGJdPk9jY5cHjfOZTntJ400EQNVuZ7WOSbx8VdvGmu7nCRJkp5fBhAddzc9Nj17hajZwSBvtD+1abJj
        h1/FXpYL1jfaXmXrkZ6p9KeXDBaHaLVbdim9+Wu96bx1rdcu19O6ytbexnR6+1m9xWFebkIoSZLU2Qwg
        Oq7edlZf2j3SullgXDFqx67ZDferbx8pbk7Ybrml9o5v9KTdQ62bEMZwULnPyK0PTxT37Gi33FKKE9g/
        evFguuX+5usuvM/I3U9NF5cbbresJEmSnl8GEB1XJ/94wcnarftxbB2ZSv+2ZrTtMsvpfef1za2jcvf0
        bfXpdGr+HuK8jXbLLbVPXFq5ytaCO62/f1VnLvErSZKkozOA6Lh6cnRbcyP98JHZDfW0dSY9OLw7feii
        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
        EEmSJEldywAiSZIkqWsZQCRJkiR1LQOIJEmSpK5lAJEkSZLUtQwgkiRJkrqWAUSSJElS1zKASJIkSepa
        BhBJkiRJXcsAIkmSJKlrGUAkSZIkdS0DiCRJkqSuZQCRJEmS1LUMIJIkSZK6lgFEkiRJUtcygEiSJEnq
        WgYQSZIkSV3LACJJkiSpa5UDyHclSZIkaaUrB5BXS5IkSdJKVwwgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQ9YpX/H94YkeKP4v5
        IQAAAABJRU5ErkJggg==
</value>
  </data>
</root>